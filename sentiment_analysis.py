"""
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –∫–æ–ª–æ–Ω–∫—É sentiment.
–ü—Ä–∏–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –∫ 512 —Å–∏–º–≤–æ–ª–∞–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ–Ω–∑–æ—Ä–∞.
"""

import sqlite3
from pathlib import Path
from transformers import pipeline
from tqdm import tqdm

DB_PATH = Path(__file__).parent / "news.db"
MAX_LEN = 512         # –Ω–µ –±–æ–ª—å—à–µ 512 —Å–∏–º–≤–æ–ª–æ–≤
BATCH = 8             # –ø–∞–∫–µ—Ç –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞

sentiment_analyzer = pipeline(
    "sentiment-analysis",
    model="distilbert/distilbert-base-uncased-finetuned-sst-2-english",
    device_map="auto",
)

def load_unprocessed():
    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()
    cur.execute("SELECT id, title, content FROM news WHERE sentiment IS NULL")
    rows = cur.fetchall()
    conn.close()
    return rows

def update_sentiment(rows):
    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()

    for i in tqdm(range(0, len(rows), BATCH), desc="Sentiment"):
        batch = rows[i : i + BATCH]
        texts = [
            ((t or "") + " " + (c or ""))[:MAX_LEN]  # –æ–±—Ä–µ–∑–∞–µ–º
            for _, t, c in batch
        ]
        preds = sentiment_analyzer(texts)

        for (news_id, _, _), pred in zip(batch, preds):
            label = pred["label"].lower()
            sentiment = (
                "positive"
                if "positive" in label
                else "negative"
                if "negative" in label
                else "neutral"
            )
            cur.execute(
                "UPDATE news SET sentiment = ? WHERE id = ?",
                (sentiment, news_id),
            )
        conn.commit()
    conn.close()

def main():
    rows = load_unprocessed()
    if not rows:
        print("‚úÖ  –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —É–∂–µ –∏–º–µ—é—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å")
        return
    print(f"üìä  –û–±—Ä–∞–±–æ—Ç–∞–µ–º {len(rows)} —Å—Ç–∞—Ç–µ–π")
    update_sentiment(rows)
    print("‚úÖ  –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")

if __name__ == "__main__":
    main()

